{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\Project\\\\sosi_web_ui\\\\src\\\\component\\\\RandomQuotes\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomQuotes = ({\n  setClick,\n  quote\n}) => {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: \"1rem\",\n        backgroundColor: \"greenyellow\"\n      },\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setClick(prev => prev += 1);\n        setCount(prev => prev += 1);\n      },\n      children: `click me to rerender quote ${count}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RandomQuotes, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = RandomQuotes;\nexport default RandomQuotes;\nvar _c;\n$RefreshReg$(_c, \"RandomQuotes\");","map":{"version":3,"names":["Box","Button","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomQuotes","setClick","quote","_s","count","setCount","children","sx","padding","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prev","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/Project/sosi_web_ui/src/component/RandomQuotes/index.tsx"],"sourcesContent":["import { Box, Button } from \"@mui/material\";\r\nimport React, { HTMLAttributes, useEffect, useState } from \"react\";\r\n\r\nconst RandomQuotes: React.FC<Props> = ({ setClick ,quote}) => {\r\n  const [count, setCount] = useState<number>(0);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ padding: \"1rem\", backgroundColor: \"greenyellow\" }}>\r\n        {quote}\r\n      </Box>\r\n      <Button\r\n        onClick={() => {\r\n          setClick((prev: number) => (prev += 1));\r\n          setCount((prev: number) => (prev += 1));\r\n        }}\r\n      >\r\n        {`click me to rerender quote ${count}`}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\ninterface Props extends HTMLAttributes<any> {\r\n  setClick: any;\r\n  quote\r\n}\r\nexport default RandomQuotes;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAC3C,OAAOC,KAAK,IAA+BC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnE,MAAMC,YAA6B,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EAE7C,oBACEE,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACL,GAAG;MAACe,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAc,CAAE;MAAAH,QAAA,EAC1DJ;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhB,OAAA,CAACJ,MAAM;MACLqB,OAAO,EAAEA,CAAA,KAAM;QACbb,QAAQ,CAAEc,IAAY,IAAMA,IAAI,IAAI,CAAE,CAAC;QACvCV,QAAQ,CAAEU,IAAY,IAAMA,IAAI,IAAI,CAAE,CAAC;MACzC,CAAE;MAAAT,QAAA,EAED,8BAA8BF,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACV,EAAA,CAlBIH,YAA6B;AAAAgB,EAAA,GAA7BhB,YAA6B;AAuBnC,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}