{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\Project\\\\sosi_web_ui\\\\src\\\\pages\\\\reRenderPage\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport RandomQuotes from \"../../component/RandomQuotes/index.tsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReRenderPage = () => {\n  _s();\n  const [click, setClick] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ReRenderPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the ReRenderPage component.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RandomQuotes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setClick(click + 1);\n        },\n        children: \"Click me not to render quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"greenyellow\"\n        },\n        children: click\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), click % 2 === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"greenyellow\"\n        },\n        children: 'even'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"aqua\"\n        },\n        children: 'odd'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ReRenderPage, \"8ML5ng0ughTc50m0TS9XImkt2s8=\");\n_c = ReRenderPage;\nexport default ReRenderPage;\nvar _c;\n$RefreshReg$(_c, \"ReRenderPage\");","map":{"version":3,"names":["Box","Button","React","useState","RandomQuotes","jsxDEV","_jsxDEV","Fragment","_Fragment","ReRenderPage","_s","click","setClick","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","sx","padding","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/Project/sosi_web_ui/src/pages/reRenderPage/index.tsx"],"sourcesContent":["import { Box, Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport RandomQuotes from \"../../component/RandomQuotes/index.tsx\";\r\n\r\nconst ReRenderPage = () => {\r\n  const [click, setClick] = useState<number>(0);\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <h1>ReRenderPage</h1>\r\n        <p>This is the ReRenderPage component.</p>\r\n        <RandomQuotes />\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setClick((click+ 1));\r\n          }}\r\n        >\r\n          {\"Click me not to render quote\"}\r\n        </Button>\r\n        <Box sx={{ padding: \"1rem\", backgroundColor: \"greenyellow\" }}>\r\n          {click}\r\n        </Box>\r\n        {\r\n          click%2 === 0 ? (\r\n            <Box sx={{ padding: \"1rem\", backgroundColor: \"greenyellow\" }}>\r\n              {'even'}\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ padding: \"1rem\", backgroundColor: \"aqua\" }}>\r\n              {'odd'}\r\n            </Box>\r\n          )\r\n        }\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default ReRenderPage;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAE7C,oBACEG,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACN,GAAG;MAAAa,QAAA,gBACFP,OAAA;QAAAO,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBX,OAAA;QAAAO,QAAA,EAAG;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1CX,OAAA,CAACF,YAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBX,OAAA,CAACL,MAAM;QACLiB,OAAO,EAAC,WAAW;QACnBC,OAAO,EAAEA,CAAA,KAAM;UACbP,QAAQ,CAAED,KAAK,GAAE,CAAE,CAAC;QACtB,CAAE;QAAAE,QAAA,EAED;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACTX,OAAA,CAACN,GAAG;QAACoB,EAAE,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,eAAe,EAAE;QAAc,CAAE;QAAAT,QAAA,EAC1DF;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEJN,KAAK,GAAC,CAAC,KAAK,CAAC,gBACXL,OAAA,CAACN,GAAG;QAACoB,EAAE,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,eAAe,EAAE;QAAc,CAAE;QAAAT,QAAA,EAC1D;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,gBAENX,OAAA,CAACN,GAAG;QAACoB,EAAE,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,eAAe,EAAE;QAAO,CAAE;QAAAT,QAAA,EACnD;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA;EAAC,gBACN,CAAC;AAEP,CAAC;AAACP,EAAA,CAlCID,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}