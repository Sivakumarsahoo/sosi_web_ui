{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\Project\\\\sosi_web_ui\\\\src\\\\pages\\\\reRenderPage\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport RandomQuotes from \"../../component/RandomQuotes/index.tsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReRenderPage = () => {\n  _s();\n  const [click, setClick] = useState(0);\n  const [value, setValue] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontWeight: 700,\n          textAlign\n        },\n        children: \"ReRenderPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Rendering concept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RandomQuotes, {\n        click: click,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            setClick(prev => prev += 1);\n          },\n          children: \"Click me to rerender and see the effect of useEffect on child component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            setValue(prev => prev += 1);\n          },\n          children: \"Click me to value change of a state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ReRenderPage, \"E6AWJMTtpWnn3bkRjfKXKhUZsu0=\");\n_c = ReRenderPage;\nexport default ReRenderPage;\nvar _c;\n$RefreshReg$(_c, \"ReRenderPage\");","map":{"version":3,"names":["Box","Button","Typography","React","useState","RandomQuotes","jsxDEV","_jsxDEV","Fragment","_Fragment","ReRenderPage","_s","click","setClick","value","setValue","children","sx","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","variant","onClick","prev","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/Project/sosi_web_ui/src/pages/reRenderPage/index.tsx"],"sourcesContent":["import { Box, Button, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport RandomQuotes from \"../../component/RandomQuotes/index.tsx\";\r\n\r\nconst ReRenderPage = () => {\r\n  const [click, setClick] = useState<number>(0);\r\n  const [value, setValue] = useState<number>(0);\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography sx={{fontWeight:700,textAlign}}>ReRenderPage</Typography>\r\n        <Typography>Rendering concept</Typography>\r\n        <RandomQuotes click={click} value={value} />\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", gap: \"1rem\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setClick((prev) => (prev += 1));\r\n            }}\r\n          >\r\n            {\r\n              \"Click me to rerender and see the effect of useEffect on child component\"\r\n            }\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setValue((prev) => (prev += 1));\r\n            }}\r\n          >\r\n            {\"Click me to value change of a state\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default ReRenderPage;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AACvD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAC7C,oBACEG,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACP,GAAG;MAAAgB,QAAA,gBACFT,OAAA,CAACL,UAAU;QAACe,EAAE,EAAE;UAACC,UAAU,EAAC,GAAG;UAACC;QAAS,CAAE;QAAAH,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACrEhB,OAAA,CAACL,UAAU;QAAAc,QAAA,EAAC;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC1ChB,OAAA,CAACF,YAAY;QAACO,KAAK,EAAEA,KAAM;QAACE,KAAK,EAAEA;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ChB,OAAA,CAACP,GAAG;QAACiB,EAAE,EAAE;UAAEO,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAV,QAAA,gBAClET,OAAA,CAACN,MAAM;UACL0B,OAAO,EAAC,WAAW;UACnBC,OAAO,EAAEA,CAAA,KAAM;YACbf,QAAQ,CAAEgB,IAAI,IAAMA,IAAI,IAAI,CAAE,CAAC;UACjC,CAAE;UAAAb,QAAA,EAGA;QAAyE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAErE,CAAC,eACThB,OAAA,CAACN,MAAM;UACL0B,OAAO,EAAC,WAAW;UACnBC,OAAO,EAAEA,CAAA,KAAM;YACbb,QAAQ,CAAEc,IAAI,IAAMA,IAAI,IAAI,CAAE,CAAC;UACjC,CAAE;UAAAb,QAAA,EAED;QAAqC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACZ,EAAA,CAhCID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}