{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\Project\\\\sosi_web_ui\\\\src\\\\component\\\\RandomQuotes\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomQuotes = ({\n  click\n}) => {\n  _s();\n  const [quote, setQuote] = useState(\"Random\");\n  const [random, setRandom] = useState(false);\n  const quotes = [\"The only limit to our realization of tomorrow is our doubts of today.\", \"The future belongs to those who believe in the beauty of their dreams.\", \"In the end, we will remember not the words of our enemies, but the silence of our friends.\"];\n  console.log(\"rerender outside useeffect\");\n  useEffect(() => {\n    console.log(\"rerender inside useeffect\");\n    let index = Math.floor(Math.random() * 3);\n    setQuote(quotes[index]);\n  }, [click]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: \"1rem\",\n        width: \"100%\",\n        padding: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"red\"\n        },\n        onClick: () => setRandom(prev => !prev),\n        children: quote + \"  \" + click + \" \" + random\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RandomQuotes, \"yHNqAtOMUI3CAVJP+gJxHlzxABY=\");\n_c = RandomQuotes;\nexport default RandomQuotes;\nvar _c;\n$RefreshReg$(_c, \"RandomQuotes\");","map":{"version":3,"names":["Box","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomQuotes","click","_s","quote","setQuote","random","setRandom","quotes","console","log","index","Math","floor","children","sx","display","gap","width","padding","backgroundColor","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/Project/sosi_web_ui/src/component/RandomQuotes/index.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React, { HTMLAttributes, useEffect, useState } from \"react\";\r\n\r\nconst RandomQuotes: React.FC<Props> = ({ click }) => {\r\n  const [quote, setQuote] = useState<string>(\"Random\");\r\n  const [random, setRandom] = useState<boolean>(false);\r\n\r\n  const quotes = [\r\n    \"The only limit to our realization of tomorrow is our doubts of today.\",\r\n    \"The future belongs to those who believe in the beauty of their dreams.\",\r\n    \"In the end, we will remember not the words of our enemies, but the silence of our friends.\",\r\n  ];\r\n  console.log(\"rerender outside useeffect\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"rerender inside useeffect\");\r\n    let index = Math.floor(Math.random() * 3);\r\n    setQuote(quotes[index]);\r\n  }, [click]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{display:\"flex\",gap:\"1rem\",width:\"100%\",padding:'2rem'}}>\r\n        <Box\r\n          sx={{ padding: \"1rem\", backgroundColor: \"red\" }}\r\n          onClick={() => setRandom((prev) => !prev)}\r\n        >\r\n          {quote + \"  \" + click + \" \" + random}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\ninterface Props extends HTMLAttributes<any> {\r\n  click: number;\r\n}\r\nexport default RandomQuotes;\r\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,OAAOC,KAAK,IAAoBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnE,MAAMC,YAA6B,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,QAAQ,CAAC;EACpD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAEpD,MAAMY,MAAM,GAAG,CACb,uEAAuE,EACvE,wEAAwE,EACxE,4FAA4F,CAC7F;EACDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAEzCf,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACN,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACzCD,QAAQ,CAACG,MAAM,CAACG,KAAK,CAAC,CAAC;EACzB,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACEJ,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACL,GAAG;MAACsB,EAAE,EAAE;QAACC,OAAO,EAAC,MAAM;QAACC,GAAG,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACC,OAAO,EAAC;MAAM,CAAE;MAAAL,QAAA,eAC/DhB,OAAA,CAACL,GAAG;QACFsB,EAAE,EAAE;UAAEI,OAAO,EAAE,MAAM;UAAEC,eAAe,EAAE;QAAM,CAAE;QAChDC,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAEe,IAAI,IAAK,CAACA,IAAI,CAAE;QAAAR,QAAA,EAEzCV,KAAK,GAAG,IAAI,GAAGF,KAAK,GAAG,GAAG,GAAGI;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACvB,EAAA,CA7BIF,YAA6B;AAAA0B,EAAA,GAA7B1B,YAA6B;AAiCnC,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}