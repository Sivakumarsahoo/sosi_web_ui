{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\Project\\\\sosi_web_ui\\\\src\\\\component\\\\RandomQuotes\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomQuotes = ({\n  click\n}) => {\n  _s();\n  const [quote, setQuote] = useState(\"Random\");\n  const [quote2, setQuote2] = useState(\"Random\");\n  const [quote3, setQuote3] = useState(\"Random\");\n  const quotes = [\"The only limit to our realization of tomorrow is our doubts of today.\", \"The future belongs to those who believe in the beauty of their dreams.\", \"In the end, we will remember not the words of our enemies, but the silence of our friends.\"];\n  console.log(\"rerender outside useeffect\");\n  const getRandomQuote = () => {\n    let index = Math.floor(Math.random() * 3);\n    return index;\n  };\n  useEffect(() => {\n    const index = getRandomQuote();\n    setQuote(quotes[index]);\n  });\n  useEffect(() => {\n    const index = getRandomQuote();\n    setQuote2(quotes[index]);\n  }, []);\n  useEffect(() => {\n    const index = getRandomQuote();\n    setQuote3(quotes[index]);\n  }, [click]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: \"1rem\",\n        width: \"100%\",\n        padding: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"#00ff01\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            fontWeight: 900\n          },\n          children: \"without dependency array=> always run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), quote]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"#00ff01\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: \"with empty dependency array=> run only on initial render\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), quote2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: \"1rem\",\n          backgroundColor: \"#00ff01\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: \"with filled dependency array=> run when there is a value change in dependent fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), quote3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RandomQuotes, \"vHcTkdx+qQbKiqJidEqotrwoZXA=\");\n_c = RandomQuotes;\nexport default RandomQuotes;\nvar _c;\n$RefreshReg$(_c, \"RandomQuotes\");","map":{"version":3,"names":["Box","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomQuotes","click","_s","quote","setQuote","quote2","setQuote2","quote3","setQuote3","quotes","console","log","getRandomQuote","index","Math","floor","random","children","sx","display","gap","width","padding","backgroundColor","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/Project/sosi_web_ui/src/component/RandomQuotes/index.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport React, { HTMLAttributes, useEffect, useState } from \"react\";\r\n\r\nconst RandomQuotes: React.FC<Props> = ({ click }) => {\r\n  const [quote, setQuote] = useState<string>(\"Random\");\r\n  const [quote2, setQuote2] = useState<string>(\"Random\");\r\n  const [quote3, setQuote3] = useState<string>(\"Random\");\r\n\r\n  const quotes = [\r\n    \"The only limit to our realization of tomorrow is our doubts of today.\",\r\n    \"The future belongs to those who believe in the beauty of their dreams.\",\r\n    \"In the end, we will remember not the words of our enemies, but the silence of our friends.\",\r\n  ];\r\n  console.log(\"rerender outside useeffect\");\r\n\r\n  const getRandomQuote = () => {\r\n    let index = Math.floor(Math.random() * 3);\r\n    return index;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const index = getRandomQuote();\r\n    setQuote(quotes[index]);\r\n  });\r\n  useEffect(() => {\r\n    const index = getRandomQuote();\r\n    setQuote2(quotes[index]);\r\n  }, []);\r\n  useEffect(() => {\r\n    const index = getRandomQuote();\r\n    setQuote3(quotes[index]);\r\n  }, [click]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{ display: \"flex\", gap: \"1rem\", width: \"100%\", padding: \"2rem\" }}\r\n      >\r\n        <Box sx={{ padding: \"1rem\", backgroundColor: \"#00ff01\" }}>\r\n          <Box sx={{fontWeight:900}}>{\"without dependency array=> always run\"}</Box>\r\n          {quote}\r\n        </Box>\r\n        <Box sx={{ padding: \"1rem\", backgroundColor: \"#00ff01\" }}>\r\n          <Box>\r\n            {\"with empty dependency array=> run only on initial render\"}\r\n          </Box>\r\n          {quote2}\r\n        </Box>\r\n        <Box sx={{ padding: \"1rem\", backgroundColor: \"#00ff01\" }}>\r\n          <Box>\r\n            {\r\n              \"with filled dependency array=> run when there is a value change in dependent fields\"\r\n            }\r\n          </Box>\r\n          {quote3}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\ninterface Props extends HTMLAttributes<any> {\r\n  click: number;\r\n}\r\nexport default RandomQuotes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}